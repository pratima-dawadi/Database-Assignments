-- Create two tables 

-- Products: columns (product_id,product_name,category and price)
CREATE TABLE IF NOT EXISTS PRODUCTS(
	PRODUCT_ID INT PRIMARY KEY,
	PRODUCT_NAME VARCHAR(100),
	CATEGORY VARCHAR(100),
	PRICE DECIMAL(10,2)
);

-- Orders : columns(   order_id, customer_name, product_id, quantity, order_date)
CREATE TABLE IF NOT EXISTS ORDERS(
	ORDER_ID INT PRIMARY KEY,
	CUSTOMER_NAME VARCHAR(100),
	PRODUCT_ID INT,
	QUANTITY INT,
	ORDER_DATE DATE,
	FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);

-- QUESTIONS:
-- Perform  CRUD 

INSERT INTO PRODUCTS(PRODUCT_ID, PRODUCT_NAME,CATEGORY, PRICE)
VALUES(1,'SAMSUNG','MOBILE',2500),
	(2,'OPPO','MOBILE',1500),
	(3,'DELL','LAPTOP',50000),
	(4,'LENOVO','LAPTOP',40000);


INSERT INTO ORDERS(ORDER_ID,CUSTOMER_NAME, PRODUCT_ID, QUANTITY, ORDER_DATE)
VALUES (1,'RAM',4,2,'2024-07-02'),
	(2,'SITA',1,1,'2024-06-28'),
	(3,'HARI',3,4,'2024-06-05'),
	(4,'RAM',2,3,'2024-07-04');

-- Calculate the total quantity ordered for each product category in the orders table.
SELECT P.CATEGORY, SUM(O.QUANTITY) as TOTAL_QUANITY
FROM PRODUCTS P
JOIN ORDERS O ON P.PRODUCT_ID = O.PRODUCT_ID
GROUP BY P.CATEGORY;

-- Find categories where the total number of products ordered is greater than 5. 
SELECT P.CATEGORY, SUM(O.QUANTITY) as TOTAL_QUANTITY
FROM PRODUCTS P
JOIN ORDERS O ON P.PRODUCT_ID = O.PRODUCT_ID
GROUP BY P.CATEGORY HAVING SUM(O.QUANTITY) > 5;

